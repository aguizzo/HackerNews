openapi: '3.0.2'
info:
  title: Hacker News
  version: '1.0'
  description: hola
servers:
  - url: http://[::1]:3000/

components:
  schemas:
    Submission:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: identificador d'una submission
          example: 2
        title:
          type: string
          description: titol d'una submission
          example: 'Titol'
        url:
          type: string
          description: url d'una submission
          example: 'https://google.com'
        text:
          type: string
          description: text d'una submission
          example: 'comentari'
        user_id:
          type: integer
          format: int64
          description: identificador de l'usuari creador de la submission
          example: 1
        created_at:
          type: string
          format: date-time
          description: data de creació 
          example: 2021-11-26T09:33:27.238Z
        udpated_at:
          type: string
          format: date-time
          description: data de la darrera modificacio
          example: 2011-12-26T09:33:27.238Z
        upVotes:
          type: integer
          format: int64
          description: nombre de vots
          example: 2

    SubmissionPost:
      type: object
      properties:
        title:
          type: string
          description: titol d'una submission
          example: 'Titol'
        url:
          type: string
          description: url d'una submission
          example: 'https://google.com'
        text:
          type: string
          description: text d'una submission
          example: 'comentari'

    User:
      type: object
      properties:
        username:
          type: string
          description: "Nom de l'usuari"
          example: "Adria"
        email:
          type: string
          description: "Email de l'usuari"
          example: "adria.garcia.fernandez@estudiantat.upc.edu"
        password_digest:
          type: string
          description: "Contrassenya encriptada"
          example: "$2a$12$Uqdgpfe3aAWNUS.koeHJkuml75Mgd8.xWAj5CTodctOZ8EF1cVKG6"
        uid:
          type: string
          description: "ID generada automàtica"
          example: "101001275528432852910"
        provider:
          type: string
          description: "Proveïdor del login"
          example: "google_oauth2"
        created_at:
          type: string
          description: "Data de creació de l'usuari"
          example: "2021-11-17T22:35:11.636Z"
        updated_at:
          type: string
          description: "Data d'última modificació de l'usuari"
          example: "2021-11-17T22:35:11.636Z"
        about:
          type: string
          description: "Biografia de l'usuari"
          example: "Hello"
        token:
          type: string
          description: "Token de seguretat generat per Google"
          example:

    Comment:
      type: object
      properties:
        user_id:
          type: integer
          description: "ID de l'usuari"
          example: 
        submission_id:
          type: integer
          description: "ID de la submission"
          example:
        content:
          type: string
          description: "text del comentari"
          example:
   
          
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X_API_KEY
      in: header


paths:

  /submissions:
    get:
      tags:
        - submissions
      summary: troba totes les submissions de tipus url
      description: retorna totes les submissions de tipus url
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission'
    post: 
      tags: 
        - submissions
      summary: crea una nova submission
      requestBody:
        description: Omple el camp títol i url per fer una submission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionPost'
        required: true
      
      responses:   
        '200':
          description: La submission amb aquesta url ja existeix
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Submission'
        '201':
          description: Submission creada
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Submission'

      security:
        - ApiKeyAuth: []
  /ask:
    get:
      tags:
        - submissions
      summary: troba totes les submissions de tipus ask
      description: retorna totes les submissions de tipus ask
      responses:
        '200':
          description: S'ha retornat la submission especificada.
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Submission'

  /submissions/{submission_id}:
    get:
      tags:
        - submissions
      summary: troba una submission per id
      description: retorna una submission
      operationId: getSubmissionbyId
      parameters:
        - name: submission_id
          in: path
          description: Identificador de la publicació.
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: S'ha retornat la submission especificada.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Submission'

    post:
      tags:
      - comments
      summary: Afegeix un nou comentari a la submission.
      description: Afegeix un nou comentari a la submission.
      parameters:
        - name: submission_id
          in: path
          description: ID de la submission.
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        description: Content del comentari.
        content:
          application/json:
            schema:
              required:
              - text
              type: object
              properties:
                text:
                  type: string
        required: true
      responses:
        201:
          description: Comment creat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /submissions/{submission_id}/comments:
    get:
      tags:
      - submissions
      summary: Retorna tots els comentaris d'una submission.
      description: Retorna tots els comentaris d'una submission.
      parameters:
      - name: submission_id
        in: path
        description: ID de la submission.
        required: true
        schema:
          type: integer
          format: int
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /users/{user_id}:
    get:
      tags:
        - users
      summary: troba un usuari per id
      description: retorna un usuari
      operationId: getUserbyId
      parameters:
      - name: user_id
        in: path
        description: ID of User to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    put:
      tags:
      - users
      summary: Edita la informació about de l'usuari loguejat
      description: Edita la informació about de l'usuari loguejat
      parameters:
      - name: user_id
        in: path
        description: ID de l'usuari
        required: true
        schema:
          type: integer
          format: int
      requestBody:
        description: About que volem posar
        content:
          application/json:
            schema:
              required:
              - about
              type: object
              properties:
                about:
                  type: string
        required: true
      responses:
        200:
          description: Canvi fet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'                  
  
  /users/{user_id}/comments:
    get:
      tags:
        - users
      summary: troba un usuari per id i retorna els comentaris
      description: retorna els comentaris d'un usuari
      operationId: getUserbyId
      parameters:
      - name: user_id
        in: path
        description: ID of User to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'


  /users:
    get:
      tags:
        - users
      summary: troba tots els usuaris
      description: retorna un usuari
      operationId: getUsers
      responses:
        '200':
          description: OK
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
